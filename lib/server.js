// Generated by CoffeeScript 1.4.0
var Protocols, Server, fs, https;

fs = require('fs');

https = require('https');

Protocols = require('./protocols');

module.exports = Server = (function() {

  function Server(config) {
    this.config = config;
  }

  Server.prototype.start = function() {
    var options, server,
      _this = this;
    options = {
      key: fs.readFileSync(this.config.key),
      cert: fs.readFileSync(this.config.cert)
    };
    server = https.createServer(options, function(cleartextStream) {
      var _ref;
      console.log('server connected', (_ref = cleartextStream.authorized) != null ? _ref : {
        'authorized': 'unauthorized'
      });
      cleartextStream.setEncoding('utf8');
      return cleartextStream.pipe(cleartextStream);
    });
    server.listen(this.config.port, function() {
      return console.log('listening @ port', _this.config.port);
    });
    return require('plex').start({
      mode: 'root',
      secret: this.config.secret,
      listen: {
        adaptor: 'socket.io',
        server: server
      },
      protocol: Protocols.bind
    });
  };

  return Server;

})();
